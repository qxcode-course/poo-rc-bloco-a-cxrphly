{
    "patches": [
        {
            "label": "2025-09-17_14-07-52",
            "content": "@@ -1,202 +0,0 @@\n-class Towel:%0A    def __init__(self, color:str ,size:str):%0A        self.color:str = color%0A        self.size:str = size%0A        self.wetness:int = 0%0A%0Aminha:Towel = Towel(%22blue%22,%22G%22)%0A%0Aprint(minha.color)%0A%0A%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-09-17_14-40-30",
            "content": "@@ -145,48 +145,8 @@\n  0%0A%0A\n-corInput = input()%0AsizeInput = input()%0A%0A\n minh\n@@ -165,26 +165,18 @@\n wel(\n-corInput,sizeInput\n+%22blue%22,%22G%22\n )%0A%0Ap\n@@ -184,11 +184,8 @@\n int(\n-f%22%7B\n minh\n@@ -195,25 +195,8 @@\n olor\n-%7D e %7Bminha.size%7D%22\n )%0A%0A%0A\n",
            "lines": "11"
        },
        {
            "label": "2025-09-17_14-43-14",
            "content": "@@ -1,8 +1,4 @@\n-%22%22%22 \n clas\n@@ -144,97 +144,10 @@\n = 0%0A\n-    def __str__(self)-%3Estr:%0A        return f%22%7Bself.color%7D:%7Bself.size%7D:%7Bself.wetness%7D%22%0Acol\n+%0Ac\n orIn\n@@ -203,18 +203,16 @@\n Towel(co\n-lo\n rInput,s\n@@ -240,912 +240,31 @@\n inha\n-%7D%22) %22%22%22%0A%0Aclass Towel:%0A    def __init__ (self, color:str, size:str, wetness:int):%0A        self.color = color%0A        self.size = size%0A        self.wetness = wetness%0A        %0A    def getMaxWetness(self) -%3E int: %0A        match self.size:%0A            case %22P%22:%0A                return 10%0A            case %22M%22:%0A                return 20%0A            case %22G%22:%0A                return 30%0A            case _:%0A                return 0%0A    %0A    def Dry(self, amount:int)-%3E None:%0A        self.wetness += amount%0A        if self.wetness %3E self.getMaxWetness():%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness()%0A%0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A%0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A    %0A    def show(self) -%3E None:%0A        print(self)%0A        %0A    def __str__(self) -%3E str:%0A        return f%22%7Bself.color%7D %7Bself.size%7D %7Bself.wetness%7D%22%0A    \n+.color%7D e %7Bminha.size%7D%22)%0A%0A%0A\n",
            "lines": "14"
        },
        {
            "label": "2025-09-18_15-14-04",
            "content": "@@ -1,8 +1,353 @@\n+%22%22%22 class Towel:%0A    def __init__(self, color:str ,size:str):%0A        self.color:str = color%0A        self.size:str = size%0A        self.wetness:int = 0%0A    def __str__(self)-%3Estr:%0A        return f%22%7Bself.color%7D:%7Bself.size%7D:%7Bself.wetness%7D%22%0AcolorInput = input()%0AsizeInput = input()%0A%0Aminha:Towel = Towel(colorInput,sizeInput)%0A%0Aprint(f%22%7Bminha%7D%22) %22%22%22%0A%0A\n class To\n@@ -386,32 +386,45 @@\n or:str, size:str\n+, wetness:int\n ):%0A        self.\n@@ -485,17 +485,23 @@\n tness = \n-0\n+wetness\n %0A       \n@@ -766,17 +766,17 @@\n     def \n-d\n+D\n ry(self,\n@@ -1241,442 +1241,4 @@\n     \n-#Testes%0Atowel = Towel(%22Azul%22, %22P%22)%0Atowel.show()  # Azul P 0%0Atowel.dry(5)%0Atowel.show()  # Azul P 5%0Aprint(towel.isDry()) # False%0Atowel.dry(5)%0Atowel.show()  # Azul P 10%0Atowel.dry(5) # msg: toalha encharcada%0Atowel.show()  # Azul P 10%0A%0Atowel.wringOut()%0Atowel.show()  # Azul P 0%0A%0Atowel = Towel(%22Verde%22, %22G%22)%0Aprint(towel.isDry()) # True%0Atowel.dry(30)%0Atowel.show()  # Verde G 30%0Aprint(towel.isDry()) # False%0Atowel.dry(1)  # msg: toalha encharcada\n",
            "lines": "49"
        },
        {
            "label": "2025-09-18_15-15-32",
            "content": "class Towel:\n    def __init__ (self, color:str, size:str):\n        self.color = color\n        self.size = size\n        self.wetness = 0\n        \n    def getMaxWetness(self) -> int: \n        match self.size:\n            case \"P\":\n                return 10\n            case \"M\":\n                return 20\n            case \"G\":\n                return 30\n            case _:\n                return 0\n    \n    def dry(self, amount:int)-> None:\n        self.wetness += amount\n        if self.wetness > self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n    \n    def show(self) -> None:\n        print(self)\n        \n    def __str__(self) -> str:\n        return f\"{self.color} {self.size} {self.wetness}\"\n    #Testes\ntowel = Towel(\"Azul\", \"P\")\ntowel.show()  # Azul P 0\ntowel.dry(5)\ntowel.show()  # Azul P 5\nprint(towel.isDry()) # False\ntowel.dry(5)\ntowel.show()  # Azul P 10\ntowel.dry(5) # msg: toalha encharcada\ntowel.show()  # Azul P 10\n\ntowel.wringOut()\ntowel.show()  # Azul P 0\n\ntowel = Towel(\"Verde\", \"G\")\nprint(towel.isDry()) # True\ntowel.dry(30)\ntowel.show()  # Verde G 30\nprint(towel.isDry()) # False\ntowel.dry(1)  # msg: toalha encharcada",
            "lines": "54"
        }
    ]
}