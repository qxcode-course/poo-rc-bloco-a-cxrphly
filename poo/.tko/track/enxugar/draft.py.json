{
    "patches": [
        {
            "label": "2025-09-23_14-20-06",
            "content": "@@ -950,73 +950,12 @@\n int(\n-f%22Cor: %7Bself.color%7D Tamanho: %7Bself.size%7D Umidade: %7Bself.wetness%7D%22\n+self\n )%0A  \n@@ -1012,13 +1012,8 @@\n n f%22\n-Cor: \n %7Bsel\n@@ -1024,17 +1024,8 @@\n lor%7D\n- Tamanho:\n  %7Bse\n@@ -1036,17 +1036,8 @@\n ize%7D\n- Umidade:\n  %7Bse\n@@ -1376,19 +1376,19 @@\n     \n-towel.show(\n+print(towel\n )%0A  \n@@ -1467,11 +1467,12 @@\n (f%22'\n-sim\n+Seca\n ' if\n@@ -1493,19 +1493,23 @@\n  else: '\n-nao\n+Molhada\n '%22)%0A    \n@@ -1556,20 +1556,16 @@\n   amount\n-:int\n  = int(a\n@@ -1601,16 +1601,64 @@\n amount)%0A\n+            print(%22Umidade da toalha alterada%22)%0A\n         \n@@ -1707,24 +1707,78 @@\n .wringOut()%0A\n+            print(%22Toalha torcida at%C3%A9 a ultima gota%22)%0A\n         else\n",
            "lines": "63"
        },
        {
            "label": "2025-09-23_14-35-38",
            "content": "@@ -1548,13 +1548,15 @@\n int(\n-%22sim%22\n+f%22'sim'\n  if \n@@ -1577,13 +1577,15 @@\n else\n- %22\n+: '\n nao\n+'\n %22)%0A \n",
            "lines": "61"
        },
        {
            "label": "2025-09-23_14-42-10",
            "content": "@@ -1646,17 +1646,17 @@\n int(arg%5B\n-1\n+0\n %5D)%0A     \n",
            "lines": "61"
        },
        {
            "label": "2025-09-23_14-44-31",
            "content": "@@ -22,16 +22,17 @@\n __init__\n+ \n (self, c\n@@ -40,23 +40,31 @@\n lor:\n- \n str\n+ = %22%22\n , size:\n- \n str\n+ = %22%22\n ):%0A \n@@ -84,21 +84,16 @@\n olor\n-: str\n  = color\n  %0A  \n@@ -88,17 +88,16 @@\n  = color\n- \n %0A       \n@@ -106,21 +106,16 @@\n elf.size\n-: str\n  = size%0A\n@@ -134,23 +134,278 @@\n .wetness\n-: int =\n+ = 0%0A        %0A    def getMaxWetness(self) -%3E int: %0A        match self.size:%0A            case %22P%22:%0A                return 10%0A            case %22M%22:%0A                return 20%0A            case %22G%22:%0A                return 30%0A            case _:%0A                return\n  0%0A    %0A\n@@ -433,14 +433,12 @@\n unt:\n- \n int)\n- \n -%3E N\n@@ -501,26 +501,27 @@\n ess %3E= self.\n-is\n+get\n MaxWetness()\n@@ -525,111 +525,193 @@\n s():\n-%0A            self.wetness = self.isMaxWetness()%0A            print(%22toalha saturada, ensopada, pingando%22\n+ # verifica a umidade, se maior que o maximo, imprime encharcada e atribui a umidade o valor maximo%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness(\n )%0A%0A \n@@ -731,16 +731,24 @@\n ut(self)\n+ -%3E None\n :%0A      \n@@ -766,17 +766,16 @@\n ess = 0%0A\n-%0A\n     def \n@@ -780,62 +780,65 @@\n f is\n-MaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A\n+Dry(self) -%3E bool:%0A            if self.wetness == 0:%0A    \n     \n@@ -844,34 +844,36 @@\n          return \n-10\n+True\n %0A        if self\n@@ -869,29 +869,22 @@\n     \n-if self.size == %22M%22:%0A\n+    else:%0A    \n     \n@@ -902,79 +902,131 @@\n urn \n-20%0A   \n+False%0A\n     \n- if self.size == %22G%22:%0A            return 30%0A        return 0%0A\n+def show(self) -%3E None:%0A        print(f%22Cor: %7Bself.color%7D Tamanho: %7Bself.size%7D Umidade: %7Bself.wetness%7D%22)%0A        \n %0A   \n@@ -1071,20 +1071,19 @@\n urn f%22Co\n-lo\n r:\n+ \n %7Bself.co\n@@ -1090,15 +1090,18 @@\n lor%7D\n-, Size:\n+ Tamanho: \n %7Bsel\n@@ -1111,14 +1111,18 @@\n ize%7D\n-, Wet:\n+ Umidade: \n %7Bsel\n@@ -1134,16 +1134,17 @@\n ness%7D%22%0A%0A\n+%0A\n def main\n@@ -1146,17 +1146,16 @@\n  main():\n- \n %0A    tow\n@@ -1157,17 +1157,16 @@\n   towel:\n- \n Towel = \n@@ -1171,20 +1171,31 @@\n = Towel(\n-%22%22, \n+size=%22%22, color=\n %22%22)%0A    \n@@ -1206,17 +1206,16 @@\n e True:%0A\n-%0A\n         \n@@ -1218,21 +1218,16 @@\n     line\n-: str\n  = input\n@@ -1240,17 +1240,17 @@\n      arg\n-s\n+ \n : list%5Bs\n@@ -1282,25 +1282,24 @@\n       if arg\n-s\n %5B0%5D == %22end%22\n@@ -1334,25 +1334,24 @@\n elif arg\n-s\n %5B0%5D == %22\n new%22:%0A  \n@@ -1346,11 +1346,13 @@\n == %22\n-new\n+criar\n %22:%0A \n@@ -1366,98 +1366,223 @@\n     \n-color: str = args%5B1%5D%0A            size: str = args%5B2%5D%0A            towel = Towel(color, size\n+towel: Towel = Towel(color=arg%5B1%5D, size=arg%5B2%5D)%0A        elif arg%5B0%5D == %22mostrar%22:%0A            towel.show()%0A        elif arg%5B0%5D == %22seca%22:%0A            towel.isDry()%0A            print(%22sim%22 if towel.isDry() else %22nao%22\n )%0A  \n@@ -1595,25 +1595,24 @@\n elif arg\n-s\n %5B0%5D == %22\n dry%22:%0A  \n@@ -1603,19 +1603,23 @@\n %5B0%5D == %22\n-dry\n+enxugar\n %22:%0A     \n@@ -1632,17 +1632,16 @@\n  amount:\n- \n int = in\n@@ -1645,17 +1645,16 @@\n  int(arg\n-s\n %5B1%5D)%0A   \n@@ -1700,17 +1700,16 @@\n  arg\n-s\n %5B0%5D == %22\n show\n@@ -1704,20 +1704,22 @@\n %5B0%5D == %22\n-show\n+torcer\n %22:%0A     \n@@ -1729,19 +1729,23 @@\n     \n-print(towel\n+towel.wringOut(\n )%0A  \n@@ -1779,14 +1779,8 @@\n nt(%22\n-fail: \n coma\n@@ -1788,9 +1788,9 @@\n do n\n-%C3%A3\n+a\n o en\n",
            "lines": "61"
        },
        {
            "label": "2025-09-23_14-39-58",
            "content": "@@ -22,17 +22,16 @@\n __init__\n- \n (self, c\n@@ -39,31 +39,23 @@\n lor:\n+ \n str\n- = %22%22\n , size:\n+ \n str\n- = %22%22\n ):%0A \n@@ -75,16 +75,21 @@\n olor\n+: str\n  = color\n %0A   \n@@ -84,16 +84,17 @@\n  = color\n+ \n %0A       \n@@ -103,16 +103,21 @@\n elf.size\n+: str\n  = size%0A\n@@ -140,270 +140,15 @@\n ness\n- = 0%0A        %0A    def getMaxWetness(self) -%3E int: %0A        match self.size:%0A            case %22P%22:%0A                return 10%0A            case %22M%22:%0A                return 20%0A            case %22G%22:%0A                return 30%0A            case _:%0A                return\n+: int =\n  0%0A \n@@ -180,12 +180,14 @@\n unt:\n+ \n int)\n+ \n -%3E N\n@@ -250,27 +250,26 @@\n ess %3E= self.\n-get\n+is\n MaxWetness()\n@@ -273,193 +273,111 @@\n s():\n- # verifica a umidade, se maior que o maximo, imprime encharcada e atribui a umidade o valor maximo%0A            print(%22toalha encharcada%22)%0A            self.wetness = self.getMaxWetness(\n+%0A            self.wetness = self.isMaxWetness()%0A            print(%22toalha saturada, ensopada, pingando%22\n )%0A%0A \n@@ -393,32 +393,24 @@\n ingOut(self)\n- -%3E None\n :%0A        se\n@@ -420,24 +420,25 @@\n wetness = 0%0A\n+%0A\n     def isDr\n@@ -439,65 +439,62 @@\n f is\n-Dry(self) -%3E bool:%0A            if self.wetness == 0:%0A    \n+MaxWetness(self) -%3E int:%0A        if self.size == %22P%22:%0A\n     \n@@ -512,23 +512,19 @@\n urn \n-True%0A  \n+10%0A\n         \n   el\n@@ -523,162 +523,119 @@\n     \n-  else:%0A                return False%0A    def show(self) -%3E None:%0A        print(f%22Cor: %7Bself.color%7D Tamanho: %7Bself.size%7D Umidade: %7Bself.wetness%7D%22)%0A        \n+if self.size == %22M%22:%0A            return 20%0A        if self.size == %22G%22:%0A            return 30%0A        return 0%0A\n %0A   \n@@ -680,19 +680,20 @@\n urn f%22Co\n+lo\n r:\n- \n %7Bself.co\n@@ -700,18 +700,15 @@\n lor%7D\n- Tamanho: \n+, Size:\n %7Bsel\n@@ -718,18 +718,14 @@\n ize%7D\n- Umidade: \n+, Wet:\n %7Bsel\n@@ -737,17 +737,16 @@\n ness%7D%22%0A%0A\n-%0A\n def main\n@@ -748,16 +748,17 @@\n  main():\n+ \n %0A    tow\n@@ -760,16 +760,17 @@\n   towel:\n+ \n Towel = \n@@ -779,23 +779,12 @@\n wel(\n-size=%22%22, color=\n+%22%22, \n %22%22)%0A\n@@ -799,16 +799,17 @@\n e True:%0A\n+%0A\n         \n@@ -812,16 +812,21 @@\n     line\n+: str\n  = input\n@@ -839,17 +839,17 @@\n      arg\n- \n+s\n : list%5Bs\n@@ -881,24 +881,25 @@\n       if arg\n+s\n %5B0%5D == %22end%22\n@@ -934,24 +934,25 @@\n elif arg\n+s\n %5B0%5D == %22\n criar%22:%0A\n@@ -947,13 +947,11 @@\n == %22\n-criar\n+new\n %22:%0A \n@@ -965,223 +965,98 @@\n     \n-towel: Towel = Towel(color=arg%5B1%5D, size=arg%5B2%5D)%0A        elif arg%5B0%5D == %22mostrar%22:%0A            towel.show()%0A        elif arg%5B0%5D == %22seca%22:%0A            towel.isDry()%0A            print(%22sim%22 if towel.isDry() else %22nao%22\n+color: str = args%5B1%5D%0A            size: str = args%5B2%5D%0A            towel = Towel(color, size\n )%0A  \n@@ -1069,24 +1069,25 @@\n elif arg\n+s\n %5B0%5D == %22\n enxugar%22\n@@ -1082,15 +1082,11 @@\n == %22\n-enxugar\n+dry\n %22:%0A \n@@ -1103,16 +1103,17 @@\n  amount:\n+ \n int = in\n@@ -1117,16 +1117,17 @@\n  int(arg\n+s\n %5B1%5D)%0A   \n@@ -1169,24 +1169,25 @@\n elif arg\n+s\n %5B0%5D == %22\n torcer%22:\n@@ -1182,14 +1182,12 @@\n == %22\n-torcer\n+show\n %22:%0A \n@@ -1201,23 +1201,19 @@\n     \n-towel.wringOut(\n+print(towel\n )%0A  \n@@ -1243,16 +1243,22 @@\n  print(%22\n+fail: \n comando \n@@ -1258,17 +1258,17 @@\n omando n\n-a\n+%C3%A3\n o encont\n",
            "lines": "49"
        },
        {
            "label": "2025-09-23_14-40-23",
            "content": "@@ -143,28 +143,24 @@\n = 0%0A        \n-    \n %0A    def get\n@@ -399,16 +399,21 @@\n eturn 0%0A\n+    %0A\n     def \n@@ -521,16 +521,115 @@\n tness():\n+ # verifica a umidade, se maior que o maximo, imprime encharcada e atribui a umidade o valor maximo\n %0A       \n@@ -762,25 +762,24 @@\n wetness = 0%0A\n-%0A\n     def isDr\n@@ -803,22 +803,22 @@\n         \n-return\n+    if\n  self.we\n@@ -827,17 +827,92 @@\n ess == 0\n-%0A\n+:%0A                return True%0A            else:%0A                return False\n %0A    def\n@@ -957,33 +957,32 @@\n or: %7Bself.color%7D\n-,\n  Tamanho: %7Bself.\n@@ -978,33 +978,32 @@\n nho: %7Bself.size%7D\n-,\n  Umidade: %7Bself.\n@@ -1086,17 +1086,16 @@\n f.color%7D\n-,\n  Tamanho\n@@ -1107,17 +1107,16 @@\n lf.size%7D\n-,\n  Umidade\n@@ -1134,16 +1134,17 @@\n ness%7D%22%0A%0A\n+%0A\n def main\n@@ -1271,16 +1271,17 @@\n it(%22 %22)%0A\n+%0A\n         \n@@ -1363,24 +1363,31 @@\n        towel\n+: Towel\n  = Towel(col\n@@ -1500,16 +1500,42 @@\n %22seca%22:%0A\n+            towel.isDry()%0A\n         \n",
            "lines": "61"
        },
        {
            "label": "2025-09-23_14-42-38",
            "content": "@@ -5,17 +5,16 @@\n s Towel:\n- \n %0A    def\n@@ -22,16 +22,17 @@\n __init__\n+ \n (self, c\n@@ -40,37 +40,33 @@\n lor:\n- \n str\n+ = %22%22\n , size:\n- \n str\n-): #construtor\n+ = %22%22):\n %0A   \n@@ -92,54 +92,8 @@\n olor\n- #atributos - define o estado da minha toalha \n %0A   \n@@ -139,16 +139,28 @@\n ess = 0%0A\n+            \n %0A    def\n@@ -173,17 +173,16 @@\n xWetness\n- \n (self) -\n@@ -187,16 +187,17 @@\n  -%3E int:\n+ \n %0A       \n@@ -189,34 +189,37 @@\n %3E int: %0A        \n-if\n+match\n  self.size == %22P\n@@ -216,17 +216,36 @@\n size\n- ==\n+:%0A            case\n  %22P%22:%0A\n+    \n     \n@@ -274,29 +274,26 @@\n     \n-if self.size ==\n+    case\n  %22M%22:%0A\n+    \n     \n@@ -322,29 +322,26 @@\n     \n-if self.size ==\n+    case\n  %22G%22:%0A\n+    \n     \n@@ -358,16 +358,44 @@\n turn 30%0A\n+            case _:%0A        \n         \n@@ -403,17 +403,16 @@\n eturn 0%0A\n-%0A\n     def \n@@ -414,17 +414,16 @@\n  def dry\n- \n (self, a\n@@ -432,14 +432,12 @@\n unt:\n- \n int)\n- \n -%3E N\n@@ -612,65 +612,172 @@\n s()%0A\n-        %0A    def __str__(self): #toString%0A        return \n+%0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A%0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A%0A    def show(self) -%3E None:%0A        print(\n f%22Co\n@@ -839,17 +839,22 @@\n etness%7D%22\n-%0A\n+)%0A    \n     %0A   \n@@ -862,14 +862,15 @@\n def \n-isDry \n+__str__\n (sel\n@@ -879,13 +879,11 @@\n  -%3E \n-bool \n+str\n :%0A  \n@@ -899,73 +899,61 @@\n urn \n-self.wetness == 0%0A    %0A    def wringOut (self) -%3E None :%0A        \n+f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7B\n self\n@@ -960,20 +960,18 @@\n .wetness\n- = 0\n+%7D%22\n %0A%0Adef ma\n@@ -976,122 +976,70 @@\n main\n- \n ():\n- #2 fun%C3%A7%C3%A3o principal%0A    toalha = Towel (%22%22, %22%22) #3. objeto manipulado%0A    %0A    while True: #4. loop infinito%0A\n+%0A    towel:Towel = Towel(size=%22%22, color=%22%22)%0A    while True:\n %0A   \n@@ -1051,13 +1051,8 @@\n line\n-: str\n  = i\n@@ -1061,29 +1061,8 @@\n ut()\n- #5. entrada de linha\n %0A   \n@@ -1069,17 +1069,17 @@\n      arg\n-s\n+ \n : list%5Bs\n@@ -1103,66 +1103,8 @@\n %22 %22)\n- #6. lista de palavras %0A        print(%22$%22 + line)%0A        \n %0A   \n@@ -1110,25 +1110,24 @@\n       if arg\n-s\n %5B0%5D == %22end%22\n@@ -1146,17 +1146,16 @@\n   break%0A\n-%0A\n         \n@@ -1154,33 +1154,32 @@\n         elif arg\n-s\n %5B0%5D == %22criar%22:%0A\n@@ -1194,91 +1194,48 @@\n     \n+towel = Towel(\n color\n- = \n+=\n arg\n-s\n %5B1%5D\n-%0A           \n+,\n  size\n- = \n+=\n arg\n-s\n %5B2%5D\n-%0A            toalha = Towel(color, size)%0A\n+)\n %0A   \n@@ -1239,33 +1239,32 @@\n         elif arg\n-s\n %5B0%5D == %22mostrar%22\n@@ -1281,22 +1281,20 @@\n     \n-print(toalha)%0A\n+towel.show()\n %0A   \n@@ -1306,25 +1306,24 @@\n elif arg\n-s\n %5B0%5D == %22\n enxugar%22\n@@ -1318,15 +1318,12 @@\n == %22\n-enxugar\n+seca\n %22:%0A \n@@ -1337,66 +1337,48 @@\n     \n-amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A\n+print(%22sim%22 if towel.isDry() else %22nao%22)\n %0A   \n@@ -1390,25 +1390,24 @@\n elif arg\n-s\n %5B0%5D == %22\n seca%22:%0A \n@@ -1390,36 +1390,39 @@\n elif arg%5B0%5D == %22\n-seca\n+enxugar\n %22:%0A            i\n@@ -1424,104 +1424,62 @@\n     \n-if toalha.isDry():%0A                print (%22sim%22)%0A            else:%0A                print(%22nao%22)%0A\n+amount:int = int(arg%5B1%5D)%0A            towel.dry(amount)\n %0A   \n@@ -1491,17 +1491,16 @@\n elif arg\n-s\n %5B0%5D == %22\n@@ -1522,20 +1522,19 @@\n       to\n-alha\n+wel\n .wringOu\n@@ -1537,17 +1537,16 @@\n ngOut()%0A\n-%0A\n         \n@@ -1572,25 +1572,18 @@\n rint\n- \n (%22\n-fail: \n comando \n inv%C3%A1\n@@ -1582,46 +1582,28 @@\n ndo \n-inv%C3%A1lido%22)%0A%0Amain() #1. c%C3%B3digo inicia%0A%0A    \n+nao encontrado%22)%0A%0Amain()\n",
            "lines": "56"
        },
        {
            "label": "2025-09-23_14-48-33",
            "content": "@@ -5,16 +5,17 @@\n s Towel:\n+ \n %0A    def\n@@ -23,17 +23,16 @@\n __init__\n- \n (self, c\n@@ -40,21 +40,16 @@\n lor: str\n- = %22%22\n , size: \n@@ -55,15 +55,22 @@\n  str\n- = %22%22):\n+): #construtor\n %0A   \n@@ -92,16 +92,62 @@\n  = color\n+ #atributos - define o estado da minha toalha \n %0A       \n@@ -189,28 +189,16 @@\n ess = 0%0A\n-            \n %0A    def\n@@ -211,16 +211,17 @@\n xWetness\n+ \n (self) -\n@@ -226,17 +226,16 @@\n  -%3E int:\n- \n %0A       \n@@ -239,13 +239,10 @@\n     \n-match\n+if\n  sel\n@@ -251,36 +251,17 @@\n size\n-:%0A            case\n+ ==\n  %22P%22:%0A\n-    \n     \n@@ -290,26 +290,29 @@\n     \n-    case\n+if self.size ==\n  %22M%22:%0A\n-    \n     \n@@ -341,26 +341,29 @@\n     \n-    case\n+if self.size ==\n  %22G%22:%0A\n-    \n     \n@@ -384,36 +384,8 @@\n  30%0A\n-            case _:%0A        \n     \n@@ -606,16 +606,24 @@\n tness()%0A\n+        \n %0A    def\n@@ -627,40 +627,101 @@\n def \n-wringOut(self) -%3E None:%0A        \n+__str__(self): #toString%0A        return f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7B\n self\n@@ -720,37 +720,39 @@\n e: %7Bself.wetness\n- = 0%0A\n+%7D%22%0A    \n %0A    def isDry(s\n@@ -749,16 +749,17 @@\n ef isDry\n+ \n (self) -\n@@ -764,16 +764,17 @@\n  -%3E bool\n+ \n :%0A      \n@@ -800,28 +800,24 @@\n ss == 0%0A    \n-   \n- \n %0A    def __s\n@@ -809,31 +809,33 @@\n    %0A    def \n-__str__\n+wringOut \n (self) -%3E st\n@@ -832,19 +832,21 @@\n elf) -%3E \n-str\n+None \n :%0A      \n@@ -851,68 +851,8 @@\n     \n-return f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7B\n self\n@@ -859,18 +859,20 @@\n .wetness\n-%7D%22\n+ = 0\n %0A%0Adef ma\n@@ -877,36 +877,51 @@\n main\n+ \n ():\n-%0A    towel: Towel\n+ #2 fun%C3%A7%C3%A3o principal%0A    toalha\n  = Towel\n (%22%22,\n@@ -920,32 +920,79 @@\n owel\n+ \n (%22%22,\n+ \n %22%22)\n-%0A%0A    while True:\n+ #3. objeto manipulado%0A    %0A    while True: #4. loop infinito%0A\n %0A   \n@@ -1011,24 +1011,45 @@\n tr = input()\n+ #5. entrada de linha\n %0A        arg\n@@ -1048,17 +1048,17 @@\n      arg\n- \n+s\n : list%5Bs\n@@ -1078,16 +1078,39 @@\n lit(%22 %22)\n+ #6. lista de palavras \n %0A       \n@@ -1128,16 +1128,25 @@\n + line)%0A\n+        %0A\n         \n@@ -1147,24 +1147,25 @@\n       if arg\n+s\n %5B0%5D == %22end%22\n@@ -1184,16 +1184,17 @@\n   break%0A\n+%0A\n         \n@@ -1193,32 +1193,33 @@\n         elif arg\n+s\n %5B0%5D == %22criar%22:%0A\n@@ -1234,48 +1234,91 @@\n     \n-towel = Towel(\n color\n-=\n+ = \n arg\n+s\n %5B1%5D\n-,\n+%0A           \n  size\n-=\n+ = \n arg\n+s\n %5B2%5D\n-)\n+%0A            toalha = Towel(color, size)%0A\n %0A   \n@@ -1322,32 +1322,33 @@\n         elif arg\n+s\n %5B0%5D == %22mostrar%22\n@@ -1373,12 +1373,14 @@\n t(to\n-wel)\n+alha)%0A\n %0A   \n@@ -1392,24 +1392,25 @@\n elif arg\n+s\n %5B0%5D == %22\n seca%22:%0A \n@@ -1405,12 +1405,15 @@\n == %22\n-seca\n+enxugar\n %22:%0A \n@@ -1427,48 +1427,66 @@\n     \n-print(%22sim%22 if towel.isDry() else %22nao%22)\n+amount: int = int(args%5B1%5D)%0A            toalha.dry(amount)%0A\n %0A   \n@@ -1498,24 +1498,25 @@\n elif arg\n+s\n %5B0%5D == %22\n enxugar%22\n@@ -1499,39 +1499,36 @@\n lif args%5B0%5D == %22\n-enxugar\n+seca\n %22:%0A            a\n@@ -1530,62 +1530,104 @@\n     \n-amount:int = int(arg%5B1%5D)%0A            towel.dry(amount)\n+if toalha.isDry():%0A                print (%22sim%22)%0A            else:%0A                print(%22nao%22)%0A\n %0A   \n@@ -1639,16 +1639,17 @@\n elif arg\n+s\n %5B0%5D == %22\n@@ -1671,19 +1671,20 @@\n       to\n-wel\n+alha\n .wringOu\n@@ -1687,16 +1687,17 @@\n ngOut()%0A\n+%0A\n         \n@@ -1723,18 +1723,25 @@\n rint\n+ \n (%22\n+fail: \n comando \n nao \n@@ -1740,28 +1740,46 @@\n ndo \n-nao encontrado%22)%0A%0Amain()\n+inv%C3%A1lido%22)%0A%0Amain() #1. c%C3%B3digo inicia%0A%0A    \n",
            "lines": "69"
        },
        {
            "label": "2025-09-23_14-56-10",
            "content": "class Towel:\n    def __init__ (self, color: str = \"\", size: str = \"\"):\n        self.color = color\n        self.size = size\n        self.wetness = 0\n            \n    def getMaxWetness(self) -> int: \n        match self.size:\n            case \"P\":\n                return 10\n            case \"M\":\n                return 20\n            case \"G\":\n                return 30\n            case _:\n                return 0\n\n    def dry (self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print(\"toalha encharcada\")\n            self.wetness = self.getMaxWetness()\n\n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def isDry(self) -> bool:\n        return self.wetness == 0\n        \n    def __str__(self) -> str:\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n\ndef main():\n    towel: Towel = Towel(\"\",\"\")\n\n    while True:\n        line: str = input()\n        arg : list[str] = line.split(\" \")\n        print(\"$\" + line)\n        if arg[0] == \"end\":\n            break\n        elif arg[0] == \"criar\":\n            towel = Towel(color=arg[1], size=arg[2])\n        elif arg[0] == \"mostrar\":\n            print(towel)\n        elif arg[0] == \"seca\":\n            print(\"sim\" if towel.isDry() else \"nao\")\n        elif arg[0] == \"enxugar\":\n            amount:int = int(arg[1])\n            towel.dry(amount)\n        elif arg[0] == \"torcer\":\n            towel.wringOut()\n        else:\n            print(\"comando nao encontrado\")\n\nmain()",
            "lines": "56"
        }
    ]
}